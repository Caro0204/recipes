body {
  background-color: #e5e0e2;
  max-width: auto 1200px;
}

img {
  width: 100%;
  height: auto;
}
.img_top {
  opacity: 80%;
}

:root {
  --font: "Lato";
}
.farve {
  color: #c29ea6;
}

html {
  font-family: var(--font);
  --theme-color: 200.8 100% 32.69%;
}

.head_size_font {
  font-size: 3.5rem;
  margin-bottom: 0;
  color: #3e3e3e;
}
ul {
  padding-left: 16px;
  font-size: 0.9rem;
}

form {
  --form-bg: hsl(0 0% 100% / 90%);
  position: relative;
  margin-block: 0 2rem;
  padding: 1rem;
  background: var(--form-bg);
  backdrop-filter: blur(6px);
  box-shadow: 0 12px 28px 0 rgba(0, 0, 0, 0.2), 0 2px 4px 0 rgba(0, 0, 0, 0.1), inset 0 0 0 1px rgba(255, 255, 255, 0.5);
  border-radius: 10px;

  display: grid;
  grid-template-columns: minmax(min(100%, 200px), auto) 1fr;
  gap: 1.5rem 1rem;

  > :not(button) {
    grid-column: 1 / -1;
    display: grid;
    gap: 1rem;
    grid-template-columns: subgrid;
  }

  > button {
    grid-column: 2;
    place-self: start;
  }
}

.form-group {
  display: grid;
  gap: 5px;
}

.inline {
  justify-content: start;
}

.inline label {
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
  padding-block: 0.5rem;
  padding-inline: 0.4rem 0.7rem;
  margin-inline-start: -0.4rem;
  border-radius: 10px;
}

.inline:focus-within label,
.inline label:is(:hover, :focus) {
  background: hsl(#2b2b2b / 10%);
  box-shadow: inset 0 0 0 1px hsl(var(--theme-color) / 20%);
}

label,
.legend {
  font-weight: 700;
  font-size: 1rem;
  line-height: 1;
  display: grid;
  align-self: start;
  gap: 2px;
  cursor: pointer;
  font-variation-settings: "wdth" 100;
}

.form-group:focus-within :is(label, .hint) {
  color: hsl(var(--theme-color));
}

input:not([type="range"]) {
  appearance: none;
}

input:is([type="text"], [type="number"], [type="date"]),
textarea {
  color: #212121;
  box-shadow: 0 0 0 1px #d3d3d3;
  border: 2px solid transparent;
  border: 0;
  background: #f5f5f5;
  padding-block: 8px 10px;
  padding-inline: 12px;
  border-radius: 4px;
  font-size: max(16px, 1rem);
  outline: none;
  caret-color: hsl(302deg 40% 55%);
  resize: none;
  transition: 0.1s background;
}

:is(textarea, input[type]:where(:not([type="range"]))):focus-visible {
  outline: 2px solid hsl(var(--theme-color));
}

textarea {
  min-block-size: 7rem;
}

input:is([name="age_limit"], [name="price"], [name="metascore"]) {
  inline-size: 8ch;
}

:is(input, textarea):focus-visible {
  border-color: hsl(var(--theme-color));
}

/* Checkbox & Radio btns */
input:is([type="checkbox"], [type="radio"]) {
  block-size: 1.2rem;
  inline-size: 1.2rem;
  margin: 0;
  border-radius: 4px;
  display: grid;
  outline: none;
  transition: 0.1s;
  will-change: black, box-shadow;
}

input[type="radio"] {
  border-radius: 50%;
  box-shadow: inset 0 0 0 0 hsl(var(--theme-color));
}

input[type="radio"]:checked {
  box-shadow: inset 0 0 0 0.25em hsl(var(--theme-color));
}

input[type="checkbox"] {
  display: grid;
}

input[type="checkbox"]::after {
  content: "";
  block-size: 0.45em;
  inline-size: 0.8em;
  border: solid #fff;
  border-width: 0 0 3px 3px;
  place-self: center;
  transform: translateY(-0.05em) rotate(-45deg);
  transition: 0.1s;
  opacity: 0;
}

input[type="checkbox"]:checked {
  background: currentColor;
  border-color: currentColor;
  color: hsl(var(--theme-color));
}

input[type="checkbox"]:checked::after {
  opacity: 1;
}

.hint {
  color: hsl(249deg 15% 45%);
  line-height: 1.25;
  font-size: 0.9rem;
  font-weight: 400;
  font-variation-settings: "wdth" 95;
}

/* fieldset,
[role="group"] {
    margin-inline: 0;
    text-align: start;
    padding: 1rem;
    border: 1px dashed hsl(var(--theme-color));
    border-radius: 4px;
}

fieldset:focus-within,
[role="group"]:focus-within {
    border-style: solid;
} */

fieldset:focus-within :is(legend, .hint),
[role="group"]:focus-within :is([id], .hint) {
  color: hsl(var(--theme-color));
}

fieldset {
  padding: 0;
  /* border: 0; */
  border-color: transparent;
  padding: 0.5rem;
  margin-inline: -0.5rem;
  gap: 0 1rem;
}

fieldset:focus-within {
  border-color: hsl(var(--theme-color));
}

legend {
  padding: 0;
  margin: 0;
  font-size: 1.125rem;
  font-weight: 700;
  float: left;
}

legend + .hint {
  margin-block-end: 1rem;
}

legend + .form-group {
  margin-block-start: 1rem;
}

.controls {
  display: grid;
  justify-items: start;
}

.controls label {
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
  font-size: 0.8em;
  font-weight: 600;
  padding-block: 0.5rem;
  padding-inline: 0.4rem 0.7rem;
  margin-inline-start: -0.4rem;
  border-radius: 10px;
}

.controls li:focus-within label,
.controls label:is(:hover, :focus-visible) {
  background: hsl(var(--theme-color) / 10%);
  box-shadow: inset 0 0 0 1px hsl(var(--theme-color) / 20%);
}

.input-group {
  display: inline-grid;
  justify-self: start;
}

.input-group > * {
  grid-row: 1;
}

.input-group span {
  font-weight: 700;
  color: #212121;
  background: hsl(0deg 0% 90%);
  padding-inline: 8px;
  display: grid;
  margin-inline-end: -1px;
  border-radius: 4px 0 0 4px;
  box-shadow: 0 0 0 1px #d3d3d3;
  align-items: center;
  z-index: 1;
  order: -1;
}

.input-group input:focus-visible + span {
  background: hsl(var(--theme-color));
  color: #fff;
}

.btn {
  color: #212121;
  border: 1px solid #d3d3d3;
  background: #c29ea6;
  font-weight: 600;
  color: #fff;
  padding-block: 8px 10px;
  padding-inline: 12px;
  border-radius: 4px;
}

.range-wrap {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 0.125rem;
}

.range-wrap > input[type="range"] {
  flex-basis: 100%;
  order: -1;
}

.range-wrap::before {
  --weight: calc(-175 * var(--range) + 1175);
  content: attr(data-level-min);
  font-size: 1em;
  font-family: system-ui;
  font-weight: var(--weight);
  font-variation-settings: "wght" var(--weight);
  transition: 0.25s;
}

.range-wrap::after {
  --weight: calc(175 * var(--range) + 125);
  content: attr(data-level-max);
  font-size: 1em;
  font-family: system-ui;
  font-weight: var(--weight);
  font-variation-settings: "wght" var(--weight);
  transition: 0.25s;
}

.range-wrap input {
  accent-color: hsl(var(--theme-color));
  flex: 1;
}

.range-wrap output {
  font-weight: 700;
  min-inline-size: 3rem;
}

:is(.form-group:not(.inline), fieldset) {
  display: grid;
  grid: auto / auto-flow 1fr;
  grid-template-columns: 0.65fr;
}

::marker {
  opacity: 0 !important;
}

.form-group.range {
  grid-template-rows: auto;
}

@media (max-width: 420px) {
  :is(.form-group:not(.inline), fieldset) {
    grid-template-columns: 7rem;
  }
}

input:is([type="text"], [type="color"], [type="number"], [type="date"]):not(.input-group > *),
:is(textarea, .input-group) {
  align-self: start;
}

input[name="age"] {
  inline-size: 8ch;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  appearance: textfield;
  align-self: self-start;
}
.content {
  display: grid;
  > * {
    grid-area: 1/1;
  }
  place-items: center;

  div {
    z-index: 1;
  }
}

.card {
  --font-sm: clamp(0.75rem, 0.16vw + 0.71rem, 0.84rem);
  --font-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
  --font-md: clamp(1.33rem, 0.63vw + 1.18rem, 1.68rem);
  --font-xl: clamp(2.37rem, 1.8vw + 1.92rem, 3.36rem);
  --font-xxl: clamp(3.16rem, 2.89vw + 2.43rem, 4.75rem);
  font-size: var(--font-base, 1rem);
  font-weight: 500;
  padding: 1rem;
  max-inline-size: 400px;
  border-radius: 8px;
  align-self: start;
  box-shadow: 0 12px 28px 0 rgba(0, 0, 0, 0.2), 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  background: #fff;
  overflow: clip;
  margin-bottom: 40px;
}

.card header {
  color: #000e;
  display: grid;
  place-items: end stretch;
  margin: -0.7rem -0.7rem 0.5rem;
  border-radius: 3px;
  overflow: clip;

  > * {
    grid-area: 1 / 1;
  }
  .header-content {
    padding: 1rem 1.2rem 0.5rem;
    color: #fff;
    background: #c29ea6;
  }
}

.header-content > div {
  display: flex;
  flex-wrap: wrap;
  font-size: var(--font-sm);
  /* text-transform: uppercase; */
  font-weight: 500;
  /* letter-spacing: 0.5px; */
  color: #e9e9e9;
}

.header-content > div::before {
  content: " - ";
  margin-inline: 0.25rem;
}

.header-content > div:not(:has(:nth-child(2)))::before {
  content: none;
}

.header-content > div > :first-child {
  order: -1;
}

.card h2 {
  line-height: 1.125;
  font-size: var(--font-base);

  & span:last-of-type {
    font-weight: 400;
  }
}

.card .status {
  font-size: 0.7rem;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
  padding: 0.25rem 0.3rem;
  background: oklch(var(--status) / 50%);
  border: 1px solid oklch(var(--status));
  place-self: start end;
  margin: 0.25rem;
  border-radius: 2px;
  line-height: 1;

  &[data-alive="true"] {
    --status: 0.6 0.26 145.69;
  }

  &[data-alive="false"] {
    --status: 0.6 0.26 22;
  }
}

.card h3,
.card dt {
  font-size: var(--font-sm);
  font-weight: 700;
}

.card section {
  display: grid;
  grid: auto / max(5.5rem, 35%) 1fr;
  grid: auto / 1fr 1fr;
  gap: 0.5rem;
}

.card > * + * {
  margin-top: 1rem;
}

.traits-list {
  display: flex;
  flex-flow: wrap;
  gap: 0.3rem;
  list-style: none;
}

.traits-list dd {
  padding: 0.15rem 0.3rem;
  border-radius: 4px;
  background: hsl(264 10% 92%);
  color: #2b2b2b;
  font-weight: 500;
  font-size: 0.9rem;
}

.card meter {
  inline-size: 100%;
}

.actions {
  display: flex;
  gap: 4px;
  background: hsl(0deg 0% 96.08%);
  margin: 1rem -1rem -1rem;
  padding: 0.25rem;
  justify-content: space-around;

  &:before {
    content: "";
    background: hsl(0 0% 85%);
    width: 1px;
    height: 1rem;
    height: 1lh;
    align-self: center;
  }
}

.actions button {
  all: unset;
  cursor: pointer;
  font-size: 1rem;
  color: hsl(var(--theme-color));
  padding: 0.5rem;
  flex: 1;
  min-width: 0;
  text-align: center;
  border-radius: 3px;

  &:hover,
  &:focus-visible {
    background: hsl(0 0% 85% / 30%);
  }

  &:first-of-type {
    order: -1;
  }
}

.actions button:focus-visible {
  outline: 2px solid;
  outline-offset: -2px;
}

main {
  display: grid;
  grid: auto-flow auto / repeat(auto-fit, minmax(min(100%, 400px), 1fr));
  padding-inline: max(2rem, (100% - 1200px) / 2);
  gap: 0 2rem;
  margin-block: 4rem;
  align-content: start;
  align-items: start;
}

.pets {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  gap: 1rem;
  align-self: start;
}

.grid {
  flex: 1 1 300px;
  display: grid;
  grid: repeat(4, min-content) / auto-flow 1fr;
  gap: 1rem;
  align-items: stretch;
  object-fit: cover;
  padding: clamp(1rem, 7vw, 2rem);
}
